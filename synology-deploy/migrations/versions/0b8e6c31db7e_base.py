"""base

Revision ID: 0b8e6c31db7e
Revises: 
Create Date: 2025-08-30 15:04:55.082027

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0b8e6c31db7e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(length=50), nullable=False),
    sa.Column('event', sa.String(length=50), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('trace', sa.Text(), nullable=True),
    sa.Column('path', sa.String(length=255), nullable=True),
    sa.Column('request_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('photo_metadata',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('focal_length', sa.Float(), nullable=True),
    sa.Column('aperture_f_number', sa.Float(), nullable=True),
    sa.Column('iso_equivalent', sa.Integer(), nullable=True),
    sa.Column('exposure_time', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('picker_import_task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('totp_secret', sa.String(length=32), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('refresh_token_hash', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)

    op.create_table('video_metadata',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('fps', sa.Float(), nullable=True),
    sa.Column('processing_status', sa.Enum('UNSPECIFIED', 'PROCESSING', 'READY', 'FAILED', name='video_processing_status'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wiki_category',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('wiki_category', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_wiki_category_slug'), ['slug'], unique=True)

    op.create_table('google_account',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('scopes', sa.Text(), nullable=False),
    sa.Column('last_synced_at', sa.DateTime(), nullable=True),
    sa.Column('oauth_token_json', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'email', name='uq_user_google_email')
    )
    op.create_table('media_item',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('type', sa.Enum('TYPE_UNSPECIFIED', 'PHOTO', 'VIDEO', name='media_item_type'), nullable=False),
    sa.Column('mime_type', sa.String(length=255), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('camera_make', sa.String(length=255), nullable=True),
    sa.Column('camera_model', sa.String(length=255), nullable=True),
    sa.Column('photo_metadata_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.Column('video_metadata_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['photo_metadata_id'], ['photo_metadata.id'], ),
    sa.ForeignKeyConstraint(['video_metadata_id'], ['video_metadata.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role_permissions',
    sa.Column('role_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('perm_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.ForeignKeyConstraint(['perm_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'perm_id')
    )
    op.create_table('tag',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('attr', sa.Enum('person', 'place', 'thing', name='tag_attr'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('role_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('wiki_page',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('parent_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('updated_by_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['wiki_page.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('wiki_page', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_wiki_page_slug'), ['slug'], unique=True)

    op.create_table('media',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('source_type', sa.Enum('local', 'google_photos', name='media_source_type'), nullable=False),
    sa.Column('google_media_id', sa.String(length=255), nullable=True),
    sa.Column('account_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.Column('local_rel_path', sa.String(length=255), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=True),
    sa.Column('hash_sha256', sa.CHAR(length=64), nullable=True),
    sa.Column('bytes', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.Column('mime_type', sa.String(length=255), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('orientation', sa.Integer(), nullable=True),
    sa.Column('is_video', sa.Boolean(), nullable=False),
    sa.Column('shot_at', sa.DateTime(), nullable=True),
    sa.Column('camera_make', sa.String(length=255), nullable=True),
    sa.Column('camera_model', sa.String(length=255), nullable=True),
    sa.Column('imported_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('has_playback', sa.Boolean(), nullable=False),
    sa.Column('live_group_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['google_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('picker_session',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('picker_uri', sa.Text(), nullable=True),
    sa.Column('expire_time', sa.DateTime(), nullable=True),
    sa.Column('polling_config_json', sa.Text(), nullable=True),
    sa.Column('picking_config_json', sa.Text(), nullable=True),
    sa.Column('media_items_set', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'ready', 'processing', 'enqueued', 'importing', 'imported', 'canceled', 'expired', 'error', 'failed', name='picker_session_status'), server_default='pending', nullable=False),
    sa.Column('selected_count', sa.Integer(), nullable=True),
    sa.Column('stats_json', sa.Text(), nullable=True),
    sa.Column('last_polled_at', sa.DateTime(), nullable=True),
    sa.Column('last_progress_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['google_account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id')
    )
    op.create_table('wiki_page_category',
    sa.Column('page_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('category_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['wiki_category.id'], ),
    sa.ForeignKeyConstraint(['page_id'], ['wiki_page.id'], ),
    sa.PrimaryKeyConstraint('page_id', 'category_id')
    )
    op.create_table('wiki_revision',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('page_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('revision_number', sa.Integer(), nullable=False),
    sa.Column('change_summary', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['page_id'], ['wiki_page.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('album',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('cover_media_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.Column('visibility', sa.Enum('public', 'private', 'unlisted', name='album_visibility'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['cover_media_id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exif',
    sa.Column('media_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('camera_make', sa.String(length=255), nullable=True),
    sa.Column('camera_model', sa.String(length=255), nullable=True),
    sa.Column('lens', sa.String(length=255), nullable=True),
    sa.Column('iso', sa.Integer(), nullable=True),
    sa.Column('shutter', sa.String(length=32), nullable=True),
    sa.Column('f_number', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('focal_len', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('gps_lat', sa.Numeric(precision=10, scale=7), nullable=True),
    sa.Column('gps_lng', sa.Numeric(precision=10, scale=7), nullable=True),
    sa.Column('raw_json', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('media_id')
    )
    op.create_table('job_sync',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('target', sa.String(length=50), nullable=False),
    sa.Column('account_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('session_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('queued', 'running', 'success', 'partial', 'failed', 'canceled', name='job_sync_status'), server_default='queued', nullable=False),
    sa.Column('stats_json', sa.Text(), server_default='{}', nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['picker_session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('media_playback',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('media_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('preset', sa.Enum('original', 'preview', 'mobile', 'std1080p', name='media_playback_preset'), nullable=False),
    sa.Column('rel_path', sa.String(length=255), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('v_codec', sa.String(length=32), nullable=True),
    sa.Column('a_codec', sa.String(length=32), nullable=True),
    sa.Column('v_bitrate_kbps', sa.Integer(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('poster_rel_path', sa.String(length=255), nullable=True),
    sa.Column('hash_sha256', sa.CHAR(length=64), nullable=True),
    sa.Column('status', sa.Enum('pending', 'processing', 'done', 'error', name='media_playback_status'), nullable=False),
    sa.Column('error_msg', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('media_sidecar',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('media_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('type', sa.Enum('video', 'audio', 'subtitle', name='media_sidecar_type'), nullable=False),
    sa.Column('rel_path', sa.String(length=255), nullable=True),
    sa.Column('bytes', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('media_tag',
    sa.Column('media_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('tag_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('media_id', 'tag_id')
    )
    op.create_table('picker_selection',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('google_media_id', sa.String(length=255), nullable=True),
    sa.Column('local_file_path', sa.Text(), nullable=True),
    sa.Column('local_filename', sa.String(length=500), nullable=True),
    sa.Column('status', sa.Enum('pending', 'enqueued', 'running', 'imported', 'dup', 'failed', 'expired', 'skipped', name='picker_selection_status'), server_default='pending', nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('enqueued_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('attempts', sa.Integer(), server_default='0', nullable=False),
    sa.Column('error_msg', sa.Text(), nullable=True),
    sa.Column('base_url', sa.Text(), nullable=True),
    sa.Column('base_url_fetched_at', sa.DateTime(), nullable=True),
    sa.Column('base_url_valid_until', sa.DateTime(), nullable=True),
    sa.Column('locked_by', sa.String(length=255), nullable=True),
    sa.Column('lock_heartbeat_at', sa.DateTime(), nullable=True),
    sa.Column('last_transition_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['google_media_id'], ['media_item.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['picker_session.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'google_media_id', name='uq_picker_selection_session_media')
    )
    with op.batch_alter_table('picker_selection', schema=None) as batch_op:
        batch_op.create_index('idx_picker_selection_session_status', ['session_id', 'status'], unique=False)
        batch_op.create_index('idx_picker_selection_status_lock', ['status', 'lock_heartbeat_at'], unique=False)

    op.create_table('album_item',
    sa.Column('album_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('media_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('sort_index', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.ForeignKeyConstraint(['album_id'], ['album.id'], ),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('album_id', 'media_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('album_item')
    with op.batch_alter_table('picker_selection', schema=None) as batch_op:
        batch_op.drop_index('idx_picker_selection_status_lock')
        batch_op.drop_index('idx_picker_selection_session_status')

    op.drop_table('picker_selection')
    op.drop_table('media_tag')
    op.drop_table('media_sidecar')
    op.drop_table('media_playback')
    op.drop_table('job_sync')
    op.drop_table('exif')
    op.drop_table('album')
    op.drop_table('wiki_revision')
    op.drop_table('wiki_page_category')
    op.drop_table('picker_session')
    op.drop_table('media')
    with op.batch_alter_table('wiki_page', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_wiki_page_slug'))

    op.drop_table('wiki_page')
    op.drop_table('user_roles')
    op.drop_table('tag')
    op.drop_table('role_permissions')
    op.drop_table('media_item')
    op.drop_table('google_account')
    with op.batch_alter_table('wiki_category', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_wiki_category_slug'))

    op.drop_table('wiki_category')
    op.drop_table('video_metadata')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('picker_import_task')
    op.drop_table('photo_metadata')
    op.drop_table('permission')
    op.drop_table('log')
    # ### end Alembic commands ###
