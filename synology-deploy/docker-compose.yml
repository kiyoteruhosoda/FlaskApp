version: '3.8'

services:
  photonest-web:
    image: photonest:latest
    container_name: photonest-web
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - TZ=Asia/Tokyo
      - PUID=1026
      - PGID=100
      - FLASK_ENV=production
      - FLASK_DEBUG=False
    env_file:
      - ./config/.env
    volumes:
      - ./data/media:/app/data/media
      - ./data/thumbs:/app/data/thumbs
      - ./data/playback:/app/data/playback
    depends_on:
      photonest-db:
        condition: service_healthy
      photonest-redis:
        condition: service_started
    networks:
      - photonest-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  photonest-worker:
    image: photonest:latest
    container_name: photonest-worker
    restart: unless-stopped
    command: celery -A cli.src.celery.tasks worker --loglevel=info --concurrency=2
    environment:
      - TZ=Asia/Tokyo
      - PUID=1026
      - PGID=100
      - FLASK_ENV=production
    env_file:
      - ./config/.env
    volumes:
      - ./data/media:/app/data/media
      - ./data/thumbs:/app/data/thumbs
      - ./data/playback:/app/data/playback
    depends_on:
      photonest-db:
        condition: service_healthy
      photonest-redis:
        condition: service_started
    networks:
      - photonest-network

  photonest-beat:
    image: photonest:latest
    container_name: photonest-beat
    restart: unless-stopped
    command: celery -A cli.src.celery.tasks beat --loglevel=info
    environment:
      - TZ=Asia/Tokyo
      - PUID=1026
      - PGID=100
      - FLASK_ENV=production
    env_file:
      - ./config/.env
    depends_on:
      photonest-db:
        condition: service_healthy
      photonest-redis:
        condition: service_started
    networks:
      - photonest-network

  photonest-db:
    image: mariadb:10.11
    container_name: photonest-db
    restart: unless-stopped
    environment:
      - TZ=Asia/Tokyo
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=photonest
      - MYSQL_USER=photonest_user
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./db:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    networks:
      - photonest-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  photonest-redis:
    image: redis:7-alpine
    container_name: photonest-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    environment:
      - TZ=Asia/Tokyo
    volumes:
      - ./redis:/data
    ports:
      - "6379:6379"
    networks:
      - photonest-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  photonest-network:
    driver: bridge
