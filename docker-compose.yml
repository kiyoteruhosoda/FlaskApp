version: '3.8'

services:
  web:
    image: photonest:latest
    # container_name: 削除 ← プロジェクト名に任せる
    init: true
    stop_grace_period: 60s
    command: >
      gunicorn wsgi:app
      --bind 0.0.0.0:5000
      --workers 2
      --threads 4
      --timeout 120
      --graceful-timeout 90
      --keep-alive 5
      --max-requests 1000
      --max-requests-jitter 100
      --worker-tmp-dir /dev/shm
    ports:
      - "127.0.0.1:8050:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - AES_KEY=${AES_KEY}
      - TZ=${TZ:-Asia/Tokyo}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UPLOAD_TMP_DIR=/app/data/tmp/upload
      - UPLOAD_DESTINATION_DIR=/app/data/uploads
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - /volume1/docker/photonest/data/media:/app/data/media
      - /volume1/docker/photonest/data/thumbs:/app/data/thumbs
      - /volume1/docker/photonest/data/playback:/app/data/playback
      - /volume1/docker/photonest/data/local_import:/tmp/local_import
      - /volume1/docker/photonest/data/tmp:/app/data/tmp
      - /volume1/docker/photonest/data/uploads:/app/data/uploads
    user: "${PUID:-1000}:${PGID:-1000}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request; urllib.request.urlopen('http://localhost:5000/health/live')\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    image: photonest:latest
    # container_name: 付けない
    init: true
    stop_grace_period: 60s
    command: celery -A cli.src.celery.tasks worker --loglevel=info --concurrency=2
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - AES_KEY=${AES_KEY}
      - TZ=${TZ:-Asia/Tokyo}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UPLOAD_TMP_DIR=/app/data/tmp/upload
      - UPLOAD_DESTINATION_DIR=/app/data/uploads
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - /volume1/docker/photonest/data/media:/app/data/media
      - /volume1/docker/photonest/data/thumbs:/app/data/thumbs
      - /volume1/docker/photonest/data/playback:/app/data/playback
      - /volume1/docker/photonest/data/local_import:/tmp/local_import
      - /volume1/docker/photonest/data/tmp:/app/data/tmp
      - /volume1/docker/photonest/data/uploads:/app/data/uploads
    user: "${PUID:-1000}:${PGID:-1000}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -q '[c]elery.*worker' || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s

  beat:
    image: photonest:latest
    # container_name: 削除
    init: true
    stop_grace_period: 60s
    command: [
      "celery", "-A", "cli.src.celery.tasks", "beat",
      "--loglevel=info",
      "--schedule=/app/data/celerybeat-schedule"
    ]
    volumes:
      - /volume1/docker/photonest/data/celery:/app/data
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - AES_KEY=${AES_KEY}
      - TZ=${TZ:-Asia/Tokyo}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    user: "${PUID:-1000}:${PGID:-1000}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -q '[c]elery.*beat' || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    command:
      - redis-server
      - --user
      - default
      - on
      - ">${REDIS_PASSWORD:-photonest123}"
      - +@all
      - ~*
      - allchannels
      - --appendonly
      - "yes"
      - --appendfsync
      - everysec
    environment:
      - TZ=${TZ:-Asia/Tokyo}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-photonest123}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
  media_data:
  thumb_data:
  playback_data:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16
