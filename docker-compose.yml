version: '3.8'

services:
  db:
    image: photonest-db:latest
    container_name: mariadb
    environment:
      - TZ=UTC
    ports:
      - "3307:3306"
    env_file:
      - .env
    volumes:
      - ./db_data:/var/lib/mysql
    command:
      - --default-time-zone=+00:00
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p\"${MARIADB_ROOT_PASSWORD}\" --silent"]
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 180s

  web:
    image: photonest:latest
    # container_name: 削除 ← プロジェクト名に任せる
    init: true
    stop_grace_period: 60s
    command: >
      sh -c '
        while ! mysql -h db -u "${MARIADB_USER}" -p"${MARIADB_PASSWORD}" --skip-ssl -e "SELECT 1" >/dev/null 2>&1; do
          echo "$(date -u +"%Y-%m-%dT%H:%M:%SZ") Waiting for DB...";
          sleep 3;
        done;
        echo "$(date -u +"%Y-%m-%dT%H:%M:%SZ") DB is ready. Starting web app...";
        exec gunicorn wsgi:app \
          --bind 0.0.0.0:5000 \
          --workers 2 \
          --threads 4 \
          --timeout 120 \
          --graceful-timeout 90 \
          --keep-alive 5 \
          --max-requests 1000 \
          --max-requests-jitter 100 \
          --worker-tmp-dir /dev/shm
      '
    ports:
      - "127.0.0.1:8050:5000"
    environment:
      - FLASK_ENV=production
      - TZ=UTC
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - API_BASE_URL=${API_BASE_URL:-http://localhost:5000}
      - DATABASE_URI=mysql+pymysql://${MARIADB_USER}:${MARIADB_PASSWORD}@db:3306/${MARIADB_DATABASE}?charset=utf8mb4
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - /volume1/docker/photonest/data:/app/data
    user: "${PUID:-1000}:${PGID:-1000}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import os, urllib.request; base = os.environ.get('API_BASE_URL', 'http://localhost:5000').rstrip('/') ; urllib.request.urlopen(base + '/health/live')\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    image: photonest:latest
    # container_name: 付けない
    init: true
    stop_grace_period: 60s
    command: celery -A cli.src.celery.tasks worker --loglevel=info --concurrency=2
    environment:
      - FLASK_ENV=production
      - TZ=UTC
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - API_BASE_URL=${API_BASE_URL:-http://localhost:5000}
      - DATABASE_URI=mysql+pymysql://${MARIADB_USER}:${MARIADB_PASSWORD}@db:3306/${MARIADB_DATABASE}?charset=utf8mb4
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - /volume1/docker/photonest/data:/app/data
    user: "${PUID:-1000}:${PGID:-1000}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -q '[c]elery.*worker' || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s

  beat:
    image: photonest:latest
    # container_name: 削除
    init: true
    stop_grace_period: 60s
    command: [
      "celery", "-A", "cli.src.celery.tasks", "beat",
      "--loglevel=info",
      "--schedule=/app/data/celerybeat-schedule"
    ]
    volumes:
      - /volume1/docker/photonest/data/celery:/app/data
    environment:
      - FLASK_ENV=production
      - TZ=UTC
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - API_BASE_URL=${API_BASE_URL:-http://localhost:5000}
      - DATABASE_URI=mysql+pymysql://${MARIADB_USER}:${MARIADB_PASSWORD}@db:3306/${MARIADB_DATABASE}?charset=utf8mb4
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy        
    user: "${PUID:-1000}:${PGID:-1000}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -q '[c]elery.*beat' || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    command:
      - redis-server
      - --user
      - default
      - on
      - ">${REDIS_PASSWORD:-photonest123}"
      - +@all
      - ~*
      - allchannels
      - --appendonly
      - "yes"
      - --appendfsync
      - everysec
    environment:
      - TZ=UTC
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-photonest123}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
  media_data:
  thumb_data:
  playback_data:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16
